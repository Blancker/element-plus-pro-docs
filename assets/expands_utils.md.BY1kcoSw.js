import{_ as i,c as a,o as l,b3 as n}from"./chunks/framework.xqfWRtwI.js";const o=JSON.parse('{"title":"Utils 工具类","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"expands/utils.md","filePath":"expands/utils.md"}'),e={name:"expands/utils.md"};function t(p,s,h,k,r,d){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="utils-工具类" tabindex="-1">Utils 工具类 <a class="header-anchor" href="#utils-工具类" aria-label="Permalink to &quot;Utils 工具类&quot;">​</a></h1><h2 id="vNodeUtil" tabindex="-1">VNodeUtil <a class="header-anchor" href="#vNodeUtil" aria-label="Permalink to &quot;VNodeUtil {#vNodeUtil}&quot;">​</a></h2><h3 id="isfragment" tabindex="-1">isFragment <a class="header-anchor" href="#isfragment" aria-label="Permalink to &quot;isFragment&quot;">​</a></h3><blockquote><p>判断节点是否为 vue 片段（<code>v-if</code> 或 <code>v-for</code> 等指令片段）</p></blockquote><p><code>isFragment(node: any): boolean</code></p><ul><li><code>node: any</code> - 目标节点</li></ul><h3 id="iscomment" tabindex="-1">isComment <a class="header-anchor" href="#iscomment" aria-label="Permalink to &quot;isComment&quot;">​</a></h3><blockquote><p>判断节点是否为注释</p></blockquote><p><code>isComment(node: any): boolean</code></p><ul><li><code>node: any</code> - 目标节点</li></ul><h3 id="isvalidelementnode" tabindex="-1">isValidElementNode <a class="header-anchor" href="#isvalidelementnode" aria-label="Permalink to &quot;isValidElementNode&quot;">​</a></h3><blockquote><p>判断节点是否为有效的元素类型（非 vue 片段或注释）</p></blockquote><p><code>isValidElementNode(node: any): boolean</code></p><ul><li><code>node: any</code> - 目标节点</li></ul><h3 id="getslotchildren" tabindex="-1">getSlotChildren <a class="header-anchor" href="#getslotchildren" aria-label="Permalink to &quot;getSlotChildren&quot;">​</a></h3><blockquote><p>获取指定插槽内部子元素节点</p></blockquote><p><code>getSlotChildren(slots: Slots, name: string): VNode[]</code></p><ul><li><code>slots: Slots</code> - 组件插槽对象</li><li><code>name: string</code> - 目标插槽名称</li></ul><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useSlots } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { VNodeUtil } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@easyui/element-plus-pro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> slots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useSlots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isFragment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slots.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isComment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slots.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValidElementNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slots.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSlotChildren</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(slots, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="parseclassstr" tabindex="-1">parseClassStr <a class="header-anchor" href="#parseclassstr" aria-label="Permalink to &quot;parseClassStr&quot;">​</a></h3><blockquote><p>将 class 对象值解析为 class 字符串</p></blockquote><p><code>parseClassStr(classObj: Record&lt;string, boolean&gt;): string</code></p><ul><li><code>classObj: Record&lt;string, boolean&gt;</code> - 目标 class 对象</li></ul><h3 id="parseclassobj" tabindex="-1">parseClassObj <a class="header-anchor" href="#parseclassobj" aria-label="Permalink to &quot;parseClassObj&quot;">​</a></h3><blockquote><p>将 class 字符串值解析为 class 对象</p></blockquote><p><code>parseClassObj(classStr: string): Record&lt;string, boolean&gt;</code></p><ul><li><code>classStr: string</code> - 目标 class 字符串</li></ul><h3 id="parsestylestr" tabindex="-1">parseStyleStr <a class="header-anchor" href="#parsestylestr" aria-label="Permalink to &quot;parseStyleStr&quot;">​</a></h3><blockquote><p>将 style 对象值解析为 style 字符串</p></blockquote><p><code>parseStyleStr(styleObj: Record&lt;string, any&gt;): string</code></p><ul><li><code>styleObj: Record&lt;string, any&gt;</code> - 目标 style 对象</li></ul><h3 id="parsestyleobj" tabindex="-1">parseStyleObj <a class="header-anchor" href="#parsestyleobj" aria-label="Permalink to &quot;parseStyleObj&quot;">​</a></h3><blockquote><p>将 style 字符串值解析为 style 对象</p></blockquote><p><code>parseStyleObj(styleStr: string): Record&lt;string, any&gt;</code></p><ul><li><code>styleStr: string</code> - 目标 style 字符串</li></ul><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { VNodeUtil } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@easyui/element-plus-pro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseClassStr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example-wrapper&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example-border&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseClassObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example-wrapper example-border&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseStyleStr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ width: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, height: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  VNodeUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseStyleObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width: 50px;height: 50px;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="numberUtil" tabindex="-1">NumberUtil <a class="header-anchor" href="#numberUtil" aria-label="Permalink to &quot;NumberUtil {#numberUtil}&quot;">​</a></h2><h3 id="parseint" tabindex="-1">parseInt <a class="header-anchor" href="#parseint" aria-label="Permalink to &quot;parseInt&quot;">​</a></h3><blockquote><p>将目标字符串转换为指定基数的整数</p></blockquote><p><code>parseInt (str: string, defaultValue: number = 0, radix?: number): number</code></p><ul><li><code>str: string</code> - 要转换的字符串</li><li><code>defaultValue: number</code> - 默认值</li><li><code>radix: number</code> - 转换基数</li></ul><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { NumberUtil } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@easyui/element-plus-pro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NumberUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NumberUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NumberUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,42)])])}const c=i(e,[["render",t]]);export{o as __pageData,c as default};
